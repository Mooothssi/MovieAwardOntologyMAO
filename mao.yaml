version: v2.1.0

iri: "http://www.semanticweb.org/movie-ontology/ontologies/2020/9/mao#"

prefixes:
  dc: "http://purl.org/dc/elements/1.1/"
  dcterms: "http://purl.org/dc/terms/"
  mao: "http://www.semanticweb.org/movie-ontology/ontologies/2020/9/mao#"

annotations:
  dc:title:
    - Movie Awards Ontology^^rdfs:Literal@en
  dcterms:license:
    - >
      Copyright 2020 MAO Team

      Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  owl:versionInfo:
    - 1.0.18
  rdfs:label:
    - Movie Awards Ontology^^rdfs:Literal@en
  rdfs:comment:
    - >
      An ontology about movies and awards^^rdfs:Literal@en

owl:Class:
  owl:Thing: ""
  mao:Abstract:
    annotations:
      rdfs:comment:
        - >
          Any Entity that cannot be located in space-time. E.g. mathematical entities: formal semantics elements, regions within dimensional spaces, etc.^^xsd:string
      rdfs:label:
        - Abstract^^rdfs:Literal@en
    owl:disjointWith:
      - Event
      - Object
      - Value
    rdfs:subClassOf:
      - owl:Thing
  mao:ActingSituation:
    annotations:
      rdfs:comment:
        - >
          A set of circumstances in which one finds about acting^^xsd:string
      rdfs:label:
        - ActingSituation^^rdfs:Literal@en
    objectProperty:
      - hasActor
      - hasCharacter
      - hasFilm
      - isPartOf
    owl:disjointWith:
      - FilmMakingSituation
      - NominationSituation
      - VoiceActingSituation
    rdfs:subClassOf:
      - Situation
  mao:Agent:
    annotations:
      rdfs:comment:
        - >
          Additional comment: a computational agent can be considered as a PhysicalAgent that realizes a certain class of algorithms (that can be considered as instances of InformationObject) that allow to obtain some behaviors that are considered typical of agents in general. For an ontology of computational objects based on DOLCE see e.g. http://www.loa-cnr.it/COS/COS.owl, and http://www.loa-cnr.it/KCO/KCO.owl.^^xsd:string
      rdfs:label:
        - Agent^^rdfs:Literal@en
    owl:disjointWith:
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:AggregateRating:
    annotations:
      rdfs:comment:
        - >
          A whole formed by combining several rating^^xsd:string
      rdfs:label:
        - AggregateRating^^rdfs:Literal@en
    dataProperty:
      - hasCount
      - hasMaxValue
      - hasMinValue
      - hasName
      - hasSource
      - hasValue
    objectProperty:
      - hasPart
      - hasReviewAggregator
    owl:disjointWith:
      - Agent
      - Award
      - AwardCeremony
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Audience:
    annotations:
      rdfs:comment:
        - >
          The assembled spectators or listeners at a public event, such as a movie^^xsd:string
      rdfs:label:
        - Audience^^rdfs:Literal@en
    owl:disjointWith:
      - FilmCast
      - FilmCrew
    rdfs:subClassOf:
      - CollectiveAgent
  mao:Award:
    annotations:
      rdfs:comment:
        - >
          A prize or other mark of recognition given in honor of an achievement^^xsd:string
      rdfs:label:
        - Award^^rdfs:Literal@en
    dataProperty:
      - hasNickname
    objectProperty:
      - hasAwardCategory
      - hasPart
      - hasSetting
      - presentedBy
    owl:disjointWith:
      - Agent
      - AggregateRating
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:AwardCategory:
    annotations:
      rdfs:comment:
        - >
          A class or division of award regarded as having particular shared characteristics^^xsd:string
      rdfs:label:
        - AwardCategory^^rdfs:Literal@en
    objectProperty:
      - forOccupation
    owl:disjointWith:
      - ContentRatingCategory
      - Genre
      - Gender
      - Nationality
      - Race
    rdfs:subClassOf:
      - Classification
  mao:AwardCeremony:
    annotations:
      rdfs:comment:
        - >
          A formal act or series of acts prescribed by ritual, protocol, or convention about award^^xsd:string
      rdfs:label:
        - AwardCeremony^^rdfs:Literal@en
    dataProperty:
      - dateHeld
      - hasEditionNumber
      - yearScreened
    objectProperty:
      - follow
      - followedBy
      - hasAward
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:AwardReceivedSituation:
    annotations:
      rdfs:comment:
        - >
          A set of circumstances in which one finds about award receiving^^xsd:string
      rdfs:label:
        - AwardReceivedSituation^^rdfs:Literal@en
    owl:disjointWith:
      - NominatedForSituation
    owl:equivalentClass:
      - NominationSituation and (win value True)
    rdfs:subClassOf:
      - NominationSituation
  mao:Character:
    annotations:
      rdfs:comment:
        - >
          Character in film^^xsd:string
      rdfs:label:
        - Character^^rdfs:Literal@en
    dataProperty:
      - hasName
    objectProperty:
      - actedBy
      - hasArchetype
      - hasGender
      - hasImportance
      - hasRole
    owl:disjointWith:
      - CharacterImportance
      - CollectiveAgent
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:CharacterImportance:
    annotations:
      rdfs:comment:
        - >
          The state or fact of being of significance or value of character^^xsd:string
      rdfs:label:
        - CharacterImportance^^rdfs:Literal@en
    owl:disjointWith:
      - Character
      - CollectiveAgent
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:City:
    annotations:
      rdfs:comment:
        - >
          A large town^^xsd:string
      rdfs:label:
        - City^^rdfs:Literal@en
    owl:disjointWith:
      - Country
    rdfs:subClassOf:
      - Place
  mao:Classification:
    annotations:
      rdfs:comment:
        - >
          A special kind of Situation that allows to include time indexing for the classifies relation in situations^^xsd:string
      rdfs:label:
        - Classification^^rdfs:Literal@en
    owl:disjointWith:
      - Language
    rdfs:subClassOf:
      - Abstract
  mao:CollectiveAgent:
    annotations:
      rdfs:comment:
        - >
          A SocialAgent that is actedBy agents that are (and act as) members of a Collective. A collective agent can have roles that are also roles of those agents^^xsd:string
      rdfs:label:
        - CollectiveAgent^^rdfs:Literal@en
    objectProperty:
      - isParticipantIn
      - hasMember
    owl:disjointWith:
      - Character
      - CharacterImportance
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:ContentRatingCategory:
    annotations:
      rdfs:comment:
        - >
          A classification or ranking of content based on a comparative assessment of quality, standard, or performance^^xsd:string
      rdfs:label:
        Category^^rdfs:Literal@en
    dataProperty:
      - hasDescription
    objectProperty:
      - appliesInCountry
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:ContentRatingClassification:
    annotations:
      rdfs:comment:
        - >
          The action or process of classifying content rating according to shared qualities or characteristics^^xsd:string
      rdfs:label:
        Classification^^rdfs:Literal@en
    dataProperty:
      - hasValue
    objectProperty:
      - isPartOf
    owl:disjointWith:
      - AwardCategory
      - Gender
      - Genre
      - Nationality
      - Race
    rdfs:subClassOf:
      - Classification
  mao:Country:
    annotations:
      rdfs:comment:
        - >
          A nation with its own government, occupying a particular territory^^xsd:string
      rdfs:label:
        - Country^^rdfs:Literal@en
    owl:disjointWith:
      - City
    rdfs:subClassOf:
      - Place
  mao:Criterion:
    annotations:
      rdfs:comment:
        - >
          A principle or standard which may be judged or decided^^xsd:string
      rdfs:label:
        - Criterion^^rdfs:Literal@en
    objectProperty:
      - isCriterionFor
      - setBy
    owl:disjointWith:
      - Requirement
    rdfs:subClassOf:
      - NormativeValue
  mao:Event:
    annotations:
      rdfs:comment:
        - >
          Any physical, social, or mental process, event, or state.

          More theoretically, events can be classified in different ways, possibly based on 'aspect' (e.g. stative, continuous, accomplishement, achievement, etc.), on 'agentivity' (e.g. intentional, natural, etc.), or on 'typical participants' (e.g. human, physical, abstract, food, etc.).
          Here no special direction is taken, and the following explains why: events are related to observable situations, and they can have different views at a same time.
          If a position has to be suggested here anyway, the participant-based classification of events seems the most stable and appropriate for many modelling problems.

          (1) Alternative aspectual views

          Consider a same event 'rock erosion in the Sinni valley': it can be conceptualized as an accomplishment (what has brought a certain state to occur), as an achievement (the state resulting from a previous accomplishment), as a punctual event (if we collapse the time interval of the erosion into a time point), or as a transition (something that has changed from a state to a different one).
          In the erosion case, we could therefore have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) historical condensation, d) transition (causality).

          The different views refer to the same event, but are still different: how to live with this seeming paradox?
          A typical solution e.g. in linguistics (cf. Levin's aspectual classes) and in DOLCE Full (cf. WonderWeb D18 axiomatization) is to classify events based on aspectual differences. But this solution would create different identities for a same event, where the difference is only based on the modeller's attitude.
          An alternative solution is applied here, and exploits the notion of (observable) Situation; a Situation is a view, consistent with a Description, which can be observed of a set of entities. It can also be seen as a 'relational context' created by an observer on the basis of a 'frame'. Therefore, a Situation allows to create a context where each particular view can have a proper identity, while the Event preserves its own identity.
          For example, ErosionAsAccomplishment is a Situation where rock erosion is observed as a process leading to a certain achievement: the conditions (roles, parameters) that suggest such view are stated in a Description, which acts as a 'theory of accomplishments'. Similarly, ErosionAsTransition is a Situation where rock erosion is observed as an event that has changed a state to another: the conditions for such interpretation are stated in a different Description, which acts as a 'theory of state transitions'.
          Consider that in no case the actual event is changed or enriched in parts by the aspectual view.

          (2) Alternative intentionality views

          Similarly to aspectual views, several intentionality views can be provided for a same Event. For example, one can investigate if an avalanche has been caused by immediate natural forces, or if there is any hint of an intentional effort to activate those natural forces.
          Also in this case, the Event as such has not different identities, while the causal analysis generates situations with different identities, according to what Description is taken for interpreting the Event.
          On the other hand, if the possible actions of an Agent causing the starting of an avalanche are taken as parts of the Event, then this makes its identity change, because we are adding a part to it.
          Therefore, if intentionality is a criterion to classify events or not, this depends on if an ontology designer wants to consider causality as a relevant dimension for events' identity.

          (3) Alternative participant views

          A slightly different case is when we consider the basic participants to an Event. In this case, the identity of the Event is affected by the participating objects, because it depends on them.
          For example, if snow, mountain slopes, wind, waves, etc. are considered as an avalanche basic participants, or if we also want to add water, human agents, etc., that makes the identity of an avalanche change.
          Anyway, this approach to event classification is based on the designer's choices, and more accurately mirrors lexical or commonsense classifications (see. e.g. WordNet 'supersenses' for verb synsets).

          Ultimately, this discussion has no end, because realists will keep defending the idea that events in reality are not changed by the way we describe them, while constructivists will keep defending the idea that, whatever 'true reality' is about, it can't be modelled without the theoretical burden of how we observe and describe it.
          Both positions are in principle valid, but, if taken too radically, they focus on issues that are only partly relevant to the aim of computational ontologies, which only attempt to assist domain experts in representing what they want to conceptualize a certain portion of reality according to their own ideas.
          For this reason, in this ontology both events and situations are allowed, together with descriptions, in order to encode the modelling needs, independently from the position (if any) chosen by the designer.^^xsd:string
      rdfs:label:
        - Event^^rdfs:Literal@en
    objectProperty:
      - hasParticipant
      - involvesAgent
    owl:disjointWith:
      - Abstract
      - Object
      - Value
    rdfs:subClassOf:
      - owl:Thing
  mao:Film:
    annotations:
      rdfs:comment:
        - >
          The moving picture^^xsd:string
      rdfs:label:
        - Film^^rdfs:Literal@en
    dataProperty:
      - dateReleased
      - hasAggregateRating
      - hasFeatureLengthInMinutes
      - hasInitialReleaseYear
      - hasTitle
      - hasWikipediaLink
      - isAdult
      - isBritishFilm
    objectProperty:
      - hasAudience
      - hasContentRating
      - hasCountryOfOrigin
      - hasFilmingLocation
      - hasGenre
      - hasLanguage
      - hasOriginalLanguage
      - hasPrequels
      - hasSequels
      - hasSubTitleInLanguage
      - eligibleFor
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:FilmCast:
    annotations:
      rdfs:comment:
        - >
          The process of making casts or molds about filming^^xsd:string
      rdfs:label:
        - FilmCast^^rdfs:Literal@en
    owl:disjointWith:
      - Audience
      - FilmCrew
    owl:equivalentClass:
      - CollectiveAgent and (isParticipantIn some ActingSituation)
    rdfs:subClassOf:
      - CollectiveAgent
  mao:FilmCrew:
    annotations:
      rdfs:comment:
        - >
          A group of people who work closely together about filming^^xsd:string
      rdfs:label:
        - FilmCrew^^rdfs:Literal@en
    owl:disjointWith:
      - Audience
      - FilmCast
    owl:equivalentClass:
      - CollectiveAgent and (isParticipantIn some FilmMakingSituation)
    rdfs:subClassOf:
      - CollectiveAgent
  mao:FilmMakingSituation:
    annotations:
      rdfs:comment:
        - >
          A set of circumstances in which one finds about film making^^xsd:string
      rdfs:label:
        - FilmMakingSituation^^rdfs:Literal@en
    objectProperty:
      - hasCast
      - hasCinematographer
      - hasComposer
      - hasCrew
      - hasDirector
      - hasFilm
      - hasPart
      - hasProducer
    rdfs:subClassOf:
      - Event
      - Situation
  mao:Gender:
    annotations:
      rdfs:comment:
        - >
          The socially constructed roles and behaviors that a society typically associates with males and females^^xsd:string
      rdfs:label:
        - Gender^^rdfs:Literal@en
    owl:disjointWith:
      - AwardCategory
      - ContentRatingClassification
      - Genre
      - Nationality
      - Race
    owl:equivalentClass:
      - "{Female, Male, Non-binary}"
    rdfs:subClassOf:
      - Classification
  mao:Genre:
    annotations:
      rdfs:comment:
        - >
          A category of composition characterized by similarities in form, style, or subject matter^^xsd:string
      rdfs:label:
        - Genre^^rdfs:Literal@en
    objectProperty:
      - hasSubGenre
      - isSubGenreOf
    owl:disjointWith:
      - AwardCategory
      - ContentRatingClassification
      - Gender
      - Nationality
      - Race
    rdfs:subClassOf:
      - Classification
  mao:Language:
    annotations:
      rdfs:comment:
        - >
          The principal method of human communication^^xsd:string
      rdfs:label:
        - Language^^rdfs:Literal@en
    owl:disjointWith:
      - Classification
    rdfs:subClassOf:
      - Abstract
  mao:MovieStudio:
    annotations:
      rdfs:comment:
        - >
          A room, building, or group of buildings where movies are produced^^xsd:string
      rdfs:label:
        - MovieStudio^^rdfs:Literal@en
    objectProperty:
      - locatedIn
    rdfs:subClassOf:
      - Organization
  mao:Nationality:
    annotations:
      rdfs:comment:
        - >
          The status of belonging to a particular nation^^xsd:string
      rdfs:label:
        - Nationality^^rdfs:Literal@en
    owl:disjointWith:
      - AwardCategory
      - ContentRatingClassification
      - Gender
      - Genre
      - Race
    rdfs:subClassOf:
      - Classification
  mao:NominatedForSituation:
    annotations:
      rdfs:comment:
        - >
          Being suggested by someone for a set of circumstances^^xsd:string
      rdfs:label:
        - NominatedForSituation^^rdfs:Literal@en
    owl:disjointWith:
      - AwardReceivedSituation
    owl:equivalentClass:
      - NominationSituation and (win value False)
    rdfs:subClassOf:
      - NominationSituation
  mao:NominationSituation:
    annotations:
      rdfs:comment:
        - >
          A set of circumstances in which one finds about nomination^^xsd:string
      rdfs:label:
        - NominationSituation^^rdfs:Literal@en
    dataProperty:
      - win
    objectProperty:
      - forFilm
      - hasAward
      - hasAwardCategory
      - hasAwardCeremony
      - isGivenTo
    owl:disjointWith:
      - ActingSituation
      - FilmMakingSituation
      - VoiceActingSituation
    rdfs:subClassOf:
      - Situation
  mao:NormativeValue:
    annotations:
      rdfs:comment:
        - >
          Value that can serve as a norm, standard, codex, requirement, criterion etc.^^rdfs:Literal@en
      rdfs:label:
        - Normative value^^rdfs:Literal@en
    rdfs:subClassOf:
      - Value
  mao:Object:
    annotations:
      rdfs:comment:
        - >
          Any physical, social, or mental object, or a substance. Following DOLCE Full, objects are always participating in some event (at least their own life), and are spatially located.^^xsd:string
      rdfs:label:
        - Object^^rdfs:Literal@en
    objectProperty:
      - coparticipatesWith
      - isParticipantIn
    owl:disjointWith:
      - Abstract
      - Event
      - Value
    rdfs:subClassOf:
      - owl:Thing
  mao:Occupation:
    annotations:
      rdfs:comment:
        - >
          A job or profession^^xsd:string
      rdfs:label:
        - Occupation^^rdfs:Literal@en
    objectProperty:
      - isOccupationOf
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Organization:
    annotations:
      rdfs:comment:
        - >
          An organized body of people with a particular purpose^^xsd:string
      rdfs:label:
        - Organization^^rdfs:Literal@en
    dataProperty:
      - hasName
    owl:disjointWith:
      - Character
      - CharacterImportance
      - CollectiveAgent
      - Person
    rdfs:subClassOf:
      - Agent
  mao:Place:
    annotations:
      rdfs:comment:
        - >
          A location, in a very generic sense: a political geographic entity, a non-material location determined by the presence of other entities, pivot events or signs, complements of other entities, etc.
          In this generic sense, a Place is an approximate location.^^xsd:string
      rdfs:label:
        - Place^^rdfs:Literal@en
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Person:
    annotations:
      rdfs:comment:
        - >
          Persons in commonsense intuition, which does not apparently distinguish between either natural or social persons.^^xsd:string
      rdfs:label:
        - Person^^rdfs:Literal@en
    dataProperty:
      - hasName
    objectProperty:
      - isParticipantIn
      - hasGender
      - hasOccupation
      - eligibleFor
    owl:disjointWith:
      - Character
      - CharacterImportance
      - CollectiveAgent
      - Organization
    rdfs:subClassOf:
      - Agent
  mao:Race:
    annotations:
      rdfs:comment:
        - >
          A group of people sharing the same culture, history, language, etc.^^xsd:string
      rdfs:label:
        - Race^^rdfs:Literal@en
    owl:disjointWith:
      - AwardCategory
      - ContentRatingClassification
      - Gender
      - Genre
      - Nationality
    rdfs:subClassOf:
      - Classification
  mao:Rating:
    annotations:
      rdfs:comment:
        - >
          A classification or ranking based on a comparative assessment of quality, standard, or performance^^xsd:string
      rdfs:label:
        - Rating^^rdfs:Literal@en
    dataProperty:
      - hasMaxValue
      - hasMinValue
      - hasValue
    objectProperty:
      - hasAuthor
      - hasReviewAggregator
      - isPartOf
      - reviewOf
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Requirement:
    annotations:
      rdfs:comment:
        - >
          A thing that is compulsory^^xsd:string
      rdfs:label:
        - Requirement^^rdfs:Literal@en
    objectProperty:
      - isRequirementFor
      - satisfiesRequirement
      - violatesRequirement
    owl:disjointWith:
      - Criterion
    rdfs:subClassOf:
      - NormativeValue
  mao:Review:
    annotations:
      rdfs:comment:
        - >
          A published critical appraisal^^xsd:string
      rdfs:label:
        - Review^^rdfs:Literal@en
    dataProperty:
      - hasContent
    objectProperty:
      - hasAuthor
      - hasLanguage
      - hasPart
      - hasReviewAggregator
      - reviewOf
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Rating
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Situation:
    annotations:
      rdfs:comment:
        - >
          A view, consistent with ('satisfying') a Description, on a set of entities.
          It can also be seen as a 'relational context' created by an observer on the basis of a 'frame' (i.e. a Description).
          For example, a PlanExecution is a context including some actions executed by agents according to certain parameters and expected tasks to be achieved from a Plan; a DiagnosedSituation is a context of observed entities that is interpreted on the basis of a Diagnosis, etc.
          Situation is also able to represent reified n-ary relations, where isSettingFor is the top-level relation for all binary projections of the n-ary relation. If used in a transformation pattern for n-ary relations, the designer should take care of creating only one subclass of Situation for each n-ary relation, otherwise the 'identification constraint' (Calvanese et al., IJCAI 2001) could be violated.^^xsd:string
      rdfs:label:
        - Situation^^rdfs:Literal@en
    objectProperty:
      - isSettingFor
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - ContentRatingCategory
      - Film
      - Occupation
      - Place
      - Rating
      - Review
    rdfs:subClassOf:
      - Object
  mao:Value:
    annotations:
      rdfs:comment:
        - >
          Value is everything that has validity for something and what determines how it would be satisfied.
          Examples: self-interest, reliability, warranty, benefit, norm, requirement, criterion, recommendation...^^rdfs:Literal@en
      rdfs:label:
        - Value^^rdfs:Literal@en
    objectProperty:
      - hasException
      - isAffectedByValidityOf
      - isSatisfiedBy
      - isValidFor
      - isViolatedBy
      - satisfies
      - violates
    owl:disjointWith:
      - Abstract
      - Event
      - Object
    rdfs:subClassOf:
      - owl:Thing
  mao:VoiceActingSituation:
    annotations:
      rdfs:comment:
        - >
          A set of circumstances in which one finds about voice acting^^xsd:string
      rdfs:label:
        - VoiceActingSituation^^rdfs:Literal@en
    objectProperty:
      - hasVoiceActor
      - hasCharacter
      - hasFilm
      - isPartOf
    owl:disjointWith:
      - ActingSituation
      - FilmMakingSituation
      - NominationSituation
    rdfs:subClassOf:
      - Situation
  mao:FilmEligibleForOscars:
    owl:equivalentClass:
      - Film and (satisfiesCriterionFor some Award) and (not violatesCriterioinFor some Award)
    rdfs:subClassOf:
      - Film

owl:AnnotationProperty:
  dc:title:
    annotations:
      rdfs:comment:
        - >
          A name given to the resource^^rdfs:Literal@en
  dcterms:license:
    annotations:
      rdfs:comment:
        - >
          A legal document giving official permission to do something with the resource.^^rdfs:Literal@en
      rdfs:label:
        - License^^rdfs:Literal@en

owl:DataProperty:
  owl:topDataProperty: ""
  mao:dateHeld:
    annotations:
      rdfs:comment:
        - >
          An attribute, quality, or characteristic of data^^xsd:string
      rdfs:label:
        - date held^^rdfs:Literal@en
    rdfs:range:
      - xsd:date
  mao:dateReleased:
    annotations:
      rdfs:label:
        - date released^^rdfs:Literal@en
    rdf:type:
      - owl:FunctionalProperty
    rdfs:range:
      - xsd:dateTime
  mao:hasAggregateRating:
    annotations:
      rdfs:label:
        - has aggregate rating^^rdfs:Literal@en
    rdfs:range:
      - xsd:decimal
  mao:hasContent:
    annotations:
      rdfs:label:
        - has content^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasCount:
    annotations:
      rdfs:label:
        - has count^^rdfs:Literal@en
    rdfs:range:
      - xsd:integer
  mao:hasDescription:
    annotations:
      rdfs:label:
        - has description^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasEditionNumber:
    annotations:
      rdfs:label:
        - has edition number^^rdfs:Literal@en
    rdfs:range:
      - xsd:integer
  mao:hasFeatureLengthInMinutes:
    annotations:
      rdfs:label:
        - has feature length in minutes^^rdfs:Literal@en
    rdfs:range:
      - xsd:integer
  mao:hasInitialReleaseYear:
    annotations:
      rdfs:label:
        - has initial release year^^rdfs:Literal@en
    rdf:type:
      - owl:FunctionalProperty
    rdfs:range:
      - xsd:integer
  mao:hasMaxValue:
    annotations:
      rdfs:label:
        - has max value^^rdfs:Literal@en
    rdfs:range:
      - xsd:decimal
  mao:hasMinValue:
    annotations:
      rdfs:label:
        - has min value^^rdfs:Literal@en
    rdfs:range:
      - xsd:decimal
  mao:hasName:
    annotations:
      rdfs:label:
        - has name^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasNickname:
    annotations:
      rdfs:label:
        - has nickname^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasTitle:
    annotations:
      rdfs:label:
        - has title^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasSource:
    annotations:
      rdfs:label:
        - has source^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasValue:
    annotations:
      rdfs:label:
        - has value^^rdfs:Literal@en
    rdfs:range:
      - xsd:decimal
  mao:hasWikipediaLink:
    annotations:
      rdfs:label:
        - has Wikipedia link^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:isAdult:
    annotations:
      rdfs:label:
        - is adult^^rdfs:Literal@en
    rdfs:range:
      - xsd:boolean
  mao:isBritishFilm:
    annotations:
      rdfs:label:
        - is British film^^rdfs:Literal@en
    rdfs:range:
      - xsd:boolean
  mao:yearScreened:
    annotations:
      rdfs:label:
        - year screened^^rdfs:Literal@en
    rdfs:range:
      - xsd:integer
  mao:win:
    annotations:
      rdfs:label:
        - win^^rdfs:Literal@en
    rdfs:range:
      - xsd:boolean

owl:ObjectProperty:
  owl:topObjectProperty: ""
  mao:actedBy:
    annotations:
      rdfs:label:
        - acted by^^rdfsL:Literal@en
    rdfs:range:
      - Person
  mao:actsIn:
    annotations:
      rdfs:label:
        - acts in^^rdfs:Literal@en
    rdfs:range:
      - FilmMakingSituation
  mao:appliesInCountry:
    annotations:
      rdfs:label:
        - applies in country^^rdfs:Literal@en
    rdfs:range:
      - Country
  mao:coparticipatesWith:
    annotations:
      rdfs:comment:
        - >
          A relation between two objects participating in a same Event; e.g., 'Vitas and Jimmy are playing tennis'.^^xsd:string
      rdfs:label:
        - co-participates with^^rdfs:Literal@en
    rdfs:domain:
      - Object
    rdfs:range:
      - Object
  mao:eligibleFor:
    annotations:
      rdfs:label:
        - eligible for^^rdfs:Literal@en
    rdfs:range:
      - AwardCategory
  mao:follow:
    annotations:
      rdfs:label:
        - follow^^rdfs:Literal@en
    rdfs:range:
      - AwardCeremony
  mao:followedBy:
    annotations:
      rdfs:label:
        - followed by^^rdfs:Literal@en
    rdfs:range:
      - AwardCategory
  mao:forFilm:
    annotations:
      rdfs:label:
        - for film^^rdfs:Literal@en
    rdfs:domain:
      - NominationSituation
    rdfs:range:
      - Film
  mao:forOccupation:
    annotations:
      rdfs:label:
        - for occupation^^rdfs:Literal@en
    rdfs:domain:
      - AwardCategory
    rdfs:range:
      - Occupation
  mao:hasActor:
    annotations:
      rdfs:label:
        - has actor^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasArchetype:
    annotations:
      rdfs:label:
        - has archetype^^rdfs:Literal@en
  mao:hasAudience:
    annotations:
      rdfs:label:
        - has audience^^rdfs:Literal@en
    rdfs:range:
      - Audience
  mao:hasAuthor:
    annotations:
      rdfs:label:
        - has author^^rdfs:Literal@en
    rdfs:range:
      - Agent
  mao:hasAward:
    annotations:
      rdfs:label:
        - has award^^rdfs:Literal@en
    rdfs:range:
      - Award
  mao:hasAwardCategory:
    annotations:
      rdfs:label:
        - has award category^^rdfs:Literal@en
    rdfs:range:
      - AwardCategory
  mao:hasAwardCeremony:
    annotations:
      rdfs:label:
        - has award ceremony^^rdfs:Literal@en
    rdfs:range:
      - AwardCeremony
  mao:hasCast:
    annotations:
      rdfs:label:
        - has cast^^rdfs:Literal@en
    rdfs:range:
      - FilmCast
  mao:hasCharacter:
    annotations:
      rdfs:label:
        - has character^^rdfs:Literal@en
    rdfs:range:
      - Character
  mao:hasCinematographer:
    annotations:
      rdfs:label:
        - has cinematographer^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasComposer:
    annotations:
      rdfs:label:
        - has composer^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasContentRating:
    annotations:
      rdfs:label:
        - has content rating^^rdfs:Literal@en
    rdfs:range:
      - ContentRatingClassification
  mao:hasCountryOfOrigin:
    annotations:
      rdfs:label:
        - has country of origin^^rdfs:Literal@en
    rdfs:range:
      - Country
  mao:hasCrew:
    annotations:
      rdfs:label:
        - has crew^^rdfs:Literal@en
    rdfs:range:
      - FilmCrew
  mao:hasDirector:
    annotations:
      rdfs:label:
        - has director^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasException:
    annotations:
      rdfs:label:
        - has exception^^rdfs:Literal@en
    rdfs:domain:
      - Value
    rdfs:range:
      - owl:Thing
  mao:hasFilm:
    annotations:
      rdfs:label:
        - has Film^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasFilmingLocation:
    annotations:
      rdfs:label:
        - has filming location^^rdfs:Literal@en
    rdfs:range:
      - Place
  mao:hasFilmStudio:
    annotations:
      rdfs:label:
        - has film studio^^rdfs:Literal@en
    rdfs:range:
      - MovieStudio
  mao:hasGender:
    annotations:
      rdfs:label:
        - has gender^^rdfs:Literal@en
    rdfs:range:
      - Gender
  mao:hasGenre:
    annotations:
      rdfs:label:
        - has genre^^rdfs:Literal@en
    rdfs:range:
      - Genre
  mao:hasImportance:
    annotations:
      rdfs:label:
        - has importance^^rdfs:Literal@en
    rdfs:range:
      - CharacterImportance
  mao:hasLanguage:
    annotations:
      rdfs:label:
        - has language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasMember:
    annotations:
      rdfs:label:
        - has member^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasOccupation:
    annotations:
      rdfs:label:
        - has occupation^^rdfs:Literal@en
    rdfs:range:
      - Occupation
  mao:hasOriginalLanguage:
    annotations:
      rdfs:label:
        - has original language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasPart:
    annotations:
      rdfs:comment:
        - >
          A schematic relation between any entities, e.g. 'the human body has a brain as part', '20th century contains year 1923', 'World War II includes the Pearl Harbour event'.
          Subproperties and restrictions can be used to specialize hasPart for objects, events, etc.^^xsd:string
      rdfs:label:
        - has part^^rdfs:Literal@en
    owl:inverseOf:
      - isPartOf
    rdf:type:
      - owl:TransitiveProperty
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - owl:Thing
  mao:hasPrequels:
    annotations:
      rdfs:label:
        - has prequels^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasProducer:
    annotations:
      rdfs:label:
        - has producer^^rdfs:Literal@en
  mao:hasReviewAggregator:
    annotations:
      rdfs:label:
        - has review aggregator^^rdfs:Literal@en
    rdfs:range:
      - Organization
  mao:hasRole:
    annotations:
      rdfs:label:
        - has role^^rdfs:Literal@en
  mao:hasSequels:
    annotations:
      rdfs:label:
        - has sequels^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasSetting:
    annotations:
      rdfs:comment:
        - >
          A relation between entities and situations, e.g. 'this morning I've prepared my coffee with a new fantastic Arabica', i.e.: (an amount of) a new fantastic Arabica hasSetting the preparation of my coffee this morning.^^xsd:string
      rdfs:label:
        - has setting^^rdfs:Literal@en
    owl:inverseOf:
      - isSettingFor
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - Situation
  mao:hasSubGenre:
    annotations:
      rdfs:label:
        - has sub-genre^^rdfs:Literal@en
    rdfs:range:
      - Genre
  mao:hasSubTitleInLanguage:
    annotations:
      rdfs:label:
        - has sub title in language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasParticipant:
    annotations:
      rdfs:comment:
        - >
          A relation between an object and a process, e.g. 'John took part in the discussion', 'a large mass of snow fell during the avalanche', or 'a cook, some sugar, flour, etc. are all present in the cooking of a cake'.^^xsd:string
      rdfs:label:
        - has participant^^rdfs:Literal@en
    owl:inverseOf:
      - isParticipantIn
    rdfs:domain:
      - Event
    rdfs:range:
      - Object
  mao:hasVoiceActor:
    annotations:
      rdfs:label:
        - has voice actor^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:involvesAgent:
    annotations:
      rdfs:label:
        - involves agent^^rdfs:Literal@en
    owl:inverseOf:
      - isAgentInvolvedIn
    rdfs:domain:
      - Event
    rdfs:range:
      - Agent
    rdfs:subPropertyOf:
      - hasParticipant
  mao:isAffectedByValidityOf:
    annotations:
      rdfs:label:
        - is affected by validity of^^rdfs:Literal@en
    rdfs:domain:
      - Value
    rdfs:range:
      - owl:Thing
  mao:isAgentInvolvedIn:
    annotations:
      rdfs:label:
        - is agent involved in^^rdfs:Literal@en
    owl:inverseOf:
      - involvesAgent
    rdfs:domain:
      - Agent
    rdfs:range:
      - Event
    rdfs:subPropertyOf:
      - isParticipantIn
  mao:isCriterionFor:
    annotations:
      rdfs:label:
        - is criterion for^^rdfs:Literal@en
    rdfs:subPropertyOf:
      - isValidFor
  mao:isGivenTo:
    annotations:
      rdfs:label:
        - is given to^^rdfs:Literal@en
    rdfs:domain:
      - NominationSituation
    rdfs:range:
      - Object
  mao:isOccupationOf:
    annotations:
      rdfs:label:
        - is occupation of^^rdfs:Literal@en
    owl:inverseOf:
      - hasOccupation
    rdfs:range:
      - Person
  mao:isPartOf:
    annotations:
      rdfs:comment:
        - >
          A relation between any entities, e.g.'brain is a part of the human body'.^^xsd:string
      rdfs:label:
        - is part of^^rdfs:Literal@en
    owl:inverseOf:
      - hasPart
    rdf:type:
      - owl:TransitiveProperty
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - owl:Thing
  mao:isParticipantIn:
    annotations:
      rdfs:comment:
        - >
          A relation between an object and a process, e.g. 'John took part in the discussion', 'a large mass of snow fell during the avalanche', or 'a cook, some sugar, flour, etc. are all present in the cooking of a cake'.^^xsd:string
      rdfs:label:
        - is participant in^^rdfs:Literal@en
    owl:inverseOf:
      - hasParticipant
    rdfs:domain:
      - Object
    rdfs:range:
      - Event
  mao:isRequirementFor:
    annotations:
      rdfs:label:
        - is requirement for^^rdfs:Literal@en
    rdfs:range:
      - owl:Thing
    rdfs:subPropertyOf:
      - isValidFor
  mao:isSatisfiedBy:
    annotations:
      rdfs:label:
        - is satisfied by^^rdfs:Literal@en
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - Value
  mao:isSettingFor:
    annotations:
      rdfs:comment:
        - >
          A relation between situations and entities, e.g. 'this morning I've prepared my coffee with a new fantastic Arabica', i.e.: the preparation of my coffee this morning is the setting for (an amount of) a new fantastic Arabica.^^xsd:string
      rdfs:label:
        - is setting for^^rdfs:Literal@en
    rdfs:domain:
      - Situation
    rdfs:range:
      - owl:Thing
  mao:isSubGenreOf:
    annotations:
      rdfs:label:
        - is sub-genre of^^rdfs:Literal@en
    rdfs:range:
      - Genre
  mao:isValidFor:
    annotations:
      rdfs:comment:
        - >
          A value is always valid for some specific thing. This relation should point to an entity which is expected to satisfy a given value. Sometimes a temporal or spatial context needs to be provided, e.g. Non-EU students, 2011 graduates etc. Exceptions describing special conditions affecting the validity of a value can be described using the 'has exception' relation.^^rdfs:Literal@en
      rdfs:label:
        - is valid for^^rdfs:Literal@en
    rdfs:domain:
      - Value
    rdfs:range:
      - owl:Thing
  mao:isViolatedBy:
    annotations:
      rdfs:label:
        - is violated by^^rdfs:Literal@en
    rdfs:domain:
      - Value
    rdfs:range:
      - owl:Thing
  mao:locatedIn:
    annotations:
      rdfs:label:
        - located in^^rdfs:Literal@en
    rdfs:range:
      - Place
  mao:presentedBy:
    annotations:
      rdfs:label:
        - presented by^^rdfs:Literal@en
    rdfs:range:
      - Organization
  mao:reviewOf:
    annotations:
      rdfs:label:
        - review of^^rdfs:Literal@en
    rdfs:range:
      - Object
  mao:satisfies:
    annotations:
      rdfs:label:
        - satisfies^^rdfs:Literal@en
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - Value
  mao:satisfiesCriterion:
    annotations:
      rdfs:label:
        - satisfies criterion^^rdfs:Literal@en
    rdfs:range:
      - Criterion
    rdfs:subPropertyOf:
      - satisfies
  mao:satisfiesRequirement:
    annotations:
      rdfs:label:
        - satisfies requirement^^rdfs:Literal@en
    rdfs:range:
      - Requirement
    rdfs:subPropertyOf:
      - satisfies
  mao:setBy:
    annotations:
      rdfs:label:
        - set by^^rdfs:Literal@en
    rdfs:range:
      - Agent
  mao:violates:
    annotations:
      rdfs:label:
        - violates^^rdfs:Literal@en
    rdfs:domain:
      - owl:Thing
    rdfs:range:
      - Value
  mao:violatesCriterion:
    annotations:
      rdfs:label:
        - violates criterion^^rdfs:Literal@en
    rdfs:range:
      - Criterion
    rdfs:subPropertyOf:
      - violates
  mao:violatesRequirement:
    annotations:
      rdfs:label:
        - violates requirement^^rdfs:Literal@en
    rdfs:range:
      - Requirement
    rdfs:subPropertyOf:
      - violates
    rdfs:Domain:
  mao:satisfiesCriterionFor:
    rdfs:domain:
      - Film
    rdfs:range:
      - Award
  mao:violatesCriterionFor:
    rdfs:domain:
      - Film
    rdfs:range:
      - Award

owl:Individual:
  # Awards
  mao:BaftaAward:
    rdf:type:
      - Award
  mao:OscarAward:
    rdf:type:
      - Award
  mao:Oscars:
    rdf:type:
      - Award
  # Genders
  mao:Female:
    rdf:type:
      - Gender
  mao:Male:
    rdf:type:
      - Gender
  mao:Non-binary:
    rdf:type:
      - Gender
  # Award categories
  # Oscar
  mao:OscarBestPicture:
    annotations:
      rdfs:label:
        - Best Picture^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Producer
  mao:OscarBestDirector:
    annotations:
      rdfs:label:
        - Best Director^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:FilmDirector
  mao:OscarBestActor:
    annotations:
      rdfs:label:
        - Best Actor^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Actor
  mao:OscarBestActress:
    annotations:
      rdfs:label:
        - Best Actressr^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Actress
  mao:OscarBestSupportingActor:
    annotations:
      rdfs:label:
        - Best Supporting Actor^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Actor
  mao:OscarBestSupportingActress:
    annotations:
      rdfs:label:
        - Best Supporting Actress^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Actress
  mao:OscarBestScreenWriter:
    annotations:
      rdfs:label:
        - Best Original Screenplay^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:ScreenWriter
  mao:OscarBestCinematographer:
    annotations:
      rdfs:label:
        - Best Cinematography^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Cinematographer
  mao:OscarBestProductionDesigner:
    annotations:
      rdfs:label:
        - Best Production Design^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:ArtDirector
  mao:OscarBestComposer:
    annotations:
      rdfs:label:
        - Best Original Score^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:Composer
  mao:OscarBestEditor:
    annotations:
      rdfs:label:
        - Best Film Editing^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:FilmEditor
  # To do (It give to many occupation)
  mao:OscarBestVisualEffects:
    annotations:
      rdfs:label:
        - Best Visual Effects^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
  mao:OscarBestCostumeDesigner:
    annotations:
      rdfs:label:
        - Best Costume Design^^rdfs:Literal@en
    rdf:type:
      - AwardCategory
    relations:
      mao:forOccupation:
        - mao:CustomDesigner
  # Occupation
  mao:Producer:
    rdf:type:
      - Occupation
  mao:FilmDirector:
    rdf:type:
      - Occupation
  mao:Actor:
    rdf:type:
      - Occupation
  mao:Actress:
    rdf:type:
      - Occupation
  mao:ScreenWriter:
    rdf:type:
      - Occupation
  mao:Cinematographer:
    rdf:type:
      - Occupation
  mao:ArtDirector:
    rdf:type:
      - Occupation
  mao:Composer:
    rdf:type:
      - Occupation
  mao:FilmEditor:
    rdf:type:
      - Occupation
  mao:CustomDesigner:
    rdf:type:
      - Occupation
  #Criterion
  mao:FeatureLengthOscarCriterion:
    rdf:type:
      - Criterion
  mao:ShortFilmOscarCriterion:
    rdf:type:
      - Criterion
  mao:FeatureLengthBaftaCriterion:
    rdf:type:
      - Criterion
  mao:OutstandingBritishFilmExceptionBaftaCriterio:
    rdf:type:
      - Criterion
  mao:OutstandingDebutFilmExceptionBaftaCriterion:
    rdf:type:
      - Criterion
  mao:English:
    rdf:type:
      - Language
  mao:MainCharacter:
    rdf:type:
      - CharacterImportance
  mao:SideCharacter:
    rdf:type:
      - CharacterImportance

rules:
  filmEligible:
    rule:
      - >
        mao:Film(?m) ^ mao:satisfiesCriterion(?m, ?c) ^ mao:isCriterionFor(?c, ?award) -> mao:eligibleFor(?m, ?award)
    rdfs:comment: ""

  satisfyFeatureLengthOscarCriterion:
    rule:
      - >
        mao:Film(?m) ^ mao:hasFeatureLengthInMinutes(?m, ?t) ^ swrlb:greaterThanOrEqual(?t, 40) -> mao:satisfiesCriterion(?m, mao:FeatureLengthOscarCriterion)
    rdfs:comment: "Feature length rule for Academy Award"

  violateFeatureLengthOscarCriterion:
    rule:
      - >
        mao:Film(?m) ^ mao:hasFeatureLengthInMinutes(?m, ?t) ^ swrlb:lessThan(?t, 40) -> mao:violatesCriterion(?m, mao:FeatureLengthOscarCriterion)
    rdfs:comment: "Invalid feature length rule for Academy Award"

  satisfyShortFilmOscarCriterion:
    rule:
      - >
        mao:Film(?m) ^ mao:hasFeatureLengthInMinutes(?m, ?t) ^ swrlb:lessThanOrEqual(?t, 40) -> mao:satisfiesCriterion(?m, mao:ShortFilmOscarCriterion)
    rdfs:comment: "Short film rule for Academy Award"

  satisfyFeatureLengthBaftaCriterion:
    rule:
      - >
        mao:Film(?m) ^ mao:hasFeatureLengthInMinutes(?m, ?t) ^ swrlb:greaterThanOrEqual(?t, 70) -> mao:satisfiesCriterion(?m, mao:FeatureLengthBaftaCriterion)
    rdfs:comment: "Feature length rule for BAFTA"

  hasEnglishSubTitle:
    rule:
      - >
        mao:Film(?f) ^ mao:AwardReceivedSituation(?as) ^ mao:hasAward(?as, mao:Oscars) ^ mao:forFilm(?as, ?f) -> mao:hasSubTitleInLanguage(?f, mao:English)
    rdfs:comment: "Rule for check english sub"

  occupationForperson:
    rule:
      - >
        NominationSituation(?ns) ^ hasAwardCategory(?ns, ?ac) ^ forOccupation(?ac, ?o) ^ isGivenTo(?ns, ?p) ^ -> hasOccupation(?p, ?o)
    rdfs:comment: "Rule for find occupation for person"

  mainCharacterOscarActor:
    rule:
      - >
        mao:NominationSituation(?n) ^ mao:hasAwardCategory(?n, mao:OscarBestActor) ^ mao:isGivenTo(?n, ?p) ^ mao:forFilm(?n, ?m) ^ mao:FilmMakingSituation(?fm) ^ mao:hasFilm(?fm, ?m) ^ mao:hasPart(?fm, ?ac) ^ mao:hasActor(?ac, ?p) ^ mao:hasCharacter(?ac, ?char) -> mao:hasImportance(?char, mao:MainCharacter)
    rdfs:comment: "Rule for find occupation by award category"

  mainCharacterOscarActress:
    rule:
      - >
        mao:NominationSituation(?n) ^ mao:hasAwardCategory(?n, mao:OscarBestActress) ^ mao:isGivenTo(?n, ?p) ^ mao:forFilm(?n, ?m) ^ mao:FilmMakingSituation(?fm) ^ mao:hasFilm(?fm, ?m) ^ mao:hasPart(?fm, ?ac) ^ mao:hasActor(?ac, ?p) ^ mao:hasCharacter(?ac, ?char) -> mao:hasImportance(?char, mao:MainCharacter)
    rdfs:comment: "Rule for find main character by oscar best actress"

  sideCharacterOscarActor:
    rule:
      - >
       mao:NominationSituation(?n) ^ mao:hasAwardCategory(?n, mao:OscarBestSupportingActor) ^ mao:isGivenTo(?n, ?p) ^ mao:forFilm(?n, ?m) ^ mao:FilmMakingSituation(?fm) ^ mao:hasFilm(?fm, ?m) ^ mao:hasPart(?fm, ?ac) ^ mao:hasActor(?ac, ?p) ^ mao:hasCharacter(?ac, ?char) -> mao:hasImportance(?char, mao:SideCharacter)
    rdfs:comment: "Rule for find side character by oscar best supporting actor"

  sideCharacterOscarActress:
    rule:
      - >
        mao:NominationSituation(?n) ^ mao:hasAwardCategory(?n, mao:OscarBestSupportingActress) ^ mao:isGivenTo(?n, ?p) ^ mao:forFilm(?n, ?m) ^ mao:FilmMakingSituation(?fm) ^ mao:hasFilm(?fm, ?m) ^ mao:hasPart(?fm, ?ac) ^ mao:hasActor(?ac, ?p) ^ mao:hasCharacter(?ac, ?char) -> mao:hasImportance(?char, mao:SideCharacter)
    rdfs:comment: "Rule for find side character by oscar best supporting actress"

  satisfiesCriterionFor:
    rule:
      - >
        mao:satisfiesCriterion(?film, ?c) ^ mao:isCriterionFor(?c, ?award) -> mao:satisfiesCriterionFor(?film, ?award)

  violatesCriterionFor:
    rule:
      - >
        mao:violatesCriterion(?film, ?c) ^ mao:isCriterionFor(?c, ?award) -> mao:violatesCriterionFor(?film, ?award)
