owl:Class:
  owl:Thing: ""
  mao:ActingSituation:
    annotations:
      rdfs:label:
        - ActingSituation^^rdfs:Literal@en
    objectProperty:
      - hasActor
      - hasCharacter
      - hasFilm
      - isPartOf
    owl:disjointWith:
      - FilmMakingSituation
      - MovieWatchingSituation
      - NominationSituation
      - VoiceActingSituation
    rdfs:subClassOf:
      - Situation
  mao:Agent:
    annotations:
      rdfs:comment:
        - >
          Additional comment: a computational agent can be considered as a PhysicalAgent that realizes a certain class of algorithms (that can be considered as instances of InformationObject) that allow to obtain some behaviors that are considered typical of agents in general. For an ontology of computational objects based on DOLCE see e.g. http://www.loa-cnr.it/COS/COS.owl, and http://www.loa-cnr.it/KCO/KCO.owl.^^xsd:string
      rdfs:label:
        - Agent^^rdfs:Literal@en
    owl:disjointWith:
      - AggregateRating
      - Award
      - AwardCeremony
      - Film
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Animation:
    annotations:
      rdfs:label:
        - Animation^^rdfs:Literal@en
    owl:disjointWith:
      - FeatureFilm
      - FilmEligibleForAward
      - ShortFilm
    owl:ObjectProperty:
      - hasFilmStudio
    rdfs:subClassOf:
      - Film
  mao:Antagonist:
    annotations:
      rdfs:label:
        - Antagonist^^rdfs:Literal@en
    owl:disjointWith:
      - Protagonist
      - Hero
    rdfs:subClassOf:
      - MainCharacter
  mao:Audience:
    annotations:
      rdfs:label:
        - Audience^^rdfs:Literal@en
    owl:disjointWith:
      - FilmCast
      - FilmCrew
    rdfs:equivalentClass:
      - CollectiveAgent and (isParticipantIn some MovieWatchingSituation)
    rdfs:subClassOf:
      - CollectiveAgent
  mao:AwardReceivedSituation:
    annotations:
      rdfs:label:
        - AwardReceivedSituation^^rdfs:Literal@en
    owl:disjointWith:
      - NominatedForSituation
    rdfs:equivalentClass:
      - NominationSituation and (win value True)
    rdfs:subClassOf:
      - NominationSituation
  mao:Building:
    annotations:
      rdfs:label:
        - Building^^rdfs:Literal@en
    owl:disjointWith:
      - City
      - Country
      - GeographicalFeature
    rdfs:subClassOf:
      - Place
  mao:Character:
    annotations:
      rdfs:comment:
        - Character in film^^xsd:string
      rdfs:label:
        - Character^^rdfs:Literal@en
    dataProperty:
      - hasCharacterTitle
      - hasName
    objectProperty:
      - actedBy
      - hasArchetype
      - hasGender
      - hasImportance
      - hasRole
    owl:disjointWith:
      - CharacterImportance
      - CollectiveAgent
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:CharacterImportance:
    annotations:
      rdfs:label:
        - CharacterImportance^^rdfs:Literal@en
    owl:disjointWith:
      - Character
      - CollectiveAgent
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:City:
    annotations:
      rdfs:label:
        - City^^rdfs:Literal@en
    owl:disjointWith:
      - Building
      - Country
      - GeographicalFeature
    rdfs:subClassOf:
      - Place
  mao:CollectiveAgent:
    annotations:
      rdfs:label:
        - CollectiveAgent^^rdfs:Literal@en
    objectProperty:
      - isParticipantIn
      - hasMember
    owl:disjointWith:
      - Character
      - CharacterImportance
      - Organization
      - Person
    rdfs:subClassOf:
      - Agent
  mao:Country:
    annotations:
      rdfs:label:
        - Country^^rdfs:Literal@en
    owl:disjointWith:
      - Building
      - City
      - GeographicalFeature
    rdfs:subClassOf:
      - Place
  mao:Event:
    annotations:
      rdfs:comment:
        - >
          Any physical, social, or mental process, event, or state.

          More theoretically, events can be classified in different ways, possibly based on 'aspect' (e.g. stative, continuous, accomplishement, achievement, etc.), on 'agentivity' (e.g. intentional, natural, etc.), or on 'typical participants' (e.g. human, physical, abstract, food, etc.).
          Here no special direction is taken, and the following explains why: events are related to observable situations, and they can have different views at a same time.
          If a position has to be suggested here anyway, the participant-based classification of events seems the most stable and appropriate for many modelling problems.

          (1) Alternative aspectual views

          Consider a same event 'rock erosion in the Sinni valley': it can be conceptualized as an accomplishment (what has brought a certain state to occur), as an achievement (the state resulting from a previous accomplishment), as a punctual event (if we collapse the time interval of the erosion into a time point), or as a transition (something that has changed from a state to a different one).
          In the erosion case, we could therefore have good motivations to shift from one aspect to another: a) causation focus, b) effectual focus, c) historical condensation, d) transition (causality).

          The different views refer to the same event, but are still different: how to live with this seeming paradox?
          A typical solution e.g. in linguistics (cf. Levin's aspectual classes) and in DOLCE Full (cf. WonderWeb D18 axiomatization) is to classify events based on aspectual differences. But this solution would create different identities for a same event, where the difference is only based on the modeller's attitude.
          An alternative solution is applied here, and exploits the notion of (observable) Situation; a Situation is a view, consistent with a Description, which can be observed of a set of entities. It can also be seen as a 'relational context' created by an observer on the basis of a 'frame'. Therefore, a Situation allows to create a context where each particular view can have a proper identity, while the Event preserves its own identity.
          For example, ErosionAsAccomplishment is a Situation where rock erosion is observed as a process leading to a certain achievement: the conditions (roles, parameters) that suggest such view are stated in a Description, which acts as a 'theory of accomplishments'. Similarly, ErosionAsTransition is a Situation where rock erosion is observed as an event that has changed a state to another: the conditions for such interpretation are stated in a different Description, which acts as a 'theory of state transitions'.
          Consider that in no case the actual event is changed or enriched in parts by the aspectual view.

          (2) Alternative intentionality views

          Similarly to aspectual views, several intentionality views can be provided for a same Event. For example, one can investigate if an avalanche has been caused by immediate natural forces, or if there is any hint of an intentional effort to activate those natural forces.
          Also in this case, the Event as such has not different identities, while the causal analysis generates situations with different identities, according to what Description is taken for interpreting the Event.
          On the other hand, if the possible actions of an Agent causing the starting of an avalanche are taken as parts of the Event, then this makes its identity change, because we are adding a part to it.
          Therefore, if intentionality is a criterion to classify events or not, this depends on if an ontology designer wants to consider causality as a relevant dimension for events' identity.

          (3) Alternative participant views

          A slightly different case is when we consider the basic participants to an Event. In this case, the identity of the Event is affected by the participating objects, because it depends on them.
          For example, if snow, mountain slopes, wind, waves, etc. are considered as an avalanche basic participants, or if we also want to add water, human agents, etc., that makes the identity of an avalanche change.
          Anyway, this approach to event classification is based on the designer's choices, and more accurately mirrors lexical or commonsense classifications (see. e.g. WordNet 'supersenses' for verb synsets).

          Ultimately, this discussion has no end, because realists will keep defending the idea that events in reality are not changed by the way we describe them, while constructivists will keep defending the idea that, whatever 'true reality' is about, it can't be modelled without the theoretical burden of how we observe and describe it.
          Both positions are in principle valid, but, if taken too radically, they focus on issues that are only partly relevant to the aim of computational ontologies, which only attempt to assist domain experts in representing what they want to conceptualize a certain portion of reality according to their own ideas.
          For this reason, in this ontology both events and situations are allowed, together with descriptions, in order to encode the modelling needs, independently from the position (if any) chosen by the designer.^^xsd:string
      rdfs:label:
        - Event^^rdfs:Literal@en
    objectProperty:
      - hasParticipant
      - involvesAgent
    owl:disjointWith:
      - Abstract
      - Object
      - Value
    rdfs:subClassOf:
      - Thing
  mao:ExtraCharacter:
    annotations:
      rdfs:label:
        - ExtraCharacter^^rdfs:Literal@en
    owl:disjointWith:
      - MainCharacter
      - SideCharacter
    rdfs:subClassOf:
      - CharacterImportance
  mao:Film:
    annotations:
      rdfs:label:
        - Film^^rdfs:Literal@en
    dataProperty:
      - dateReleased
      - hasAggregateRating
      - hasFeatureLengthInMinutes
      - hasInitialReleaseYear
      - hasTitle
      - hasWikipediaLink
    objectProperty:
      - hasAudience
      - hasContentRating
      - hasCountryOfOrigin
      - hasFilmingLocation
      - hasGenre
      - hasLanguage
      - hasOriginalLanguage
      - hasPrequels
      - hasRatingStatement
      - hasSequels
      - hasSubTitleInLanguage
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - Occupation
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:FilmCast:
    annotations:
      rdfs:label:
        - FilmCast^^rdfs:Literal@en
    owl:disjointWith:
      - Audience
      - FilmCrew
    rdfs:equivalentClass:
      - CollectiveAgent and (isParticipantIn some ActingSituation)
    rdfs:subClassOf:
      - CollectiveAgent
  mao:FilmCrew:
    annotations:
      rdfs:label:
        - FilmCrew^^rdfs:Literal@en
    owl:disjointWith:
      - Audience
      - FilmCast
    rdfs:equivalentClass:
      - CollectiveAgent and (isParticipantIn some FilmMakingSituation)
    rdfs:subClassOf:
      - CollectiveAgent
  mao:FilmEligibleForAward:
    annotations:
      rdfs:label:
        - FilmEligibleForAward^^rdfs:Literal@en
    objectProperty:
      - eligibleFor
    owl:disjointWith:
      - Animation
      - FeatureFilm
      - ShortFilm
    rdfs:subClassOf:
      - Film
  mao:FeatureFilm:
    annotations:
      rdfs:label:
        - FeatureFilm^^rdfs:Literal@en
    owl:disjointWith:
      - Animation
      - FilmEligibleForAward
      - ShortFilm
    rdfs:equivalentClass:
      - Film and (hasFeatureLengthInMinutes some integer[>=40])
    rdfs:subClassOf:
      - Film
  mao:FemaleProtagonist:
    annotations:
      rdfs:label:
        - FemaleProtagonist^^rdfs:Literal@en
    owl:disjointWith:
      - MaleProtagonist
    rdfs:subClassOf:
      - Protagonist
  mao:FilmMakingSituation:
    annotations:
      rdfs:label:
        - Film making^^rdfs:Literal@en
    objectProperty:
      - hasCast
      - hasCinematographer
      - hasComposer
      - hasCrew
      - hasDirector
      - hasFilm
      - hasPart
      - hasProducer
      - hasStudio
    rdfs:subClassOf:
      - Event
      - Situation
  mao:GeographicalFeature:
    annotations:
      rdfs:label:
        - GeographicalFeature^^rdfs:Literal@en
    owl:disjointWith:
      - Building
      - City
      - Country
    rdfs:subClassOf:
      - Place
  mao:Hero:
    annotations:
      rdfs:label:
        - Hero^^rdfs:Literal@en
    owl:disjointWith:
      - Antagonist
      - Protagonist
    rdfs:subClassOf:
      - MainCharacter
  mao:Heroine:
    annotations:
      rdfs:label:
        - Heroine^^rdfs:Literal@en
    owl:disjointWith:
      - MaleHero
    rdfs:subClassOf:
      - Hero
  mao:NominatedForSituation:
    annotations:
      rdfs:label:
        - NominatedForSituation^^rdfs:Literal@en
    owl:disjointWith:
      - AwardReceivedSituation
    rdfs:equivalentClass:
      - NominationSituation and (win value False)
    rdfs:subClassOf:
      - NominationSituation
  mao:NominationSituation:
    annotations:
      rdfs:label:
        - NominationSituation^^rdfs:Literal@en
    dataProperty:
      - win
    objectProperty:
      - forFilm
      - hasAward
      - hasAwardCategory
      - hasAwardCeremony
      - isGivenTo
    owl:disjointWith:
      - ActingSituation
      - FilmMakingSituation
      - MovieWatchingSituation
      - VoiceActingSituation
    rdfs:subClassOf:
      - Situation
  mao:MainCharacter:
    annotations:
      rdfs:label:
        - MainCharacter^^rdfs:Literal@en
    owl:disjointWith:
      - ExtraCharacter
      - SideCharacter
    rdfs:subClassOf:
      - CharacterImportance
  mao:MaleHero:
    annotations:
      rdfs:label:
        - MaleHero^^rdfs:Literal@en
    owl:disjointWith:
      - Heroine
    rdfs:subClassOf:
      - Hero
  mao:MaleProtagonist:
    annotations:
      rdfs:label:
        - MaleProtagonist^^rdfs:Literal@en
    owl:disjointWith:
      - FemaleProtagonist
    rdfs:subClassOf:
      - Protagonist
  mao:MovieStudio:
    annotations:
      rdfs:label:
        - MovieStudio^^rdfs:Literal@en
    objectProperty:
      - locatedIn
    rdfs:subClassOf:
      - Organization
  mao:MovieWatchingSituation:
    annotations:
      rdfs:label:
        - MovieWatchingSituation^^rdfs:Literal@en
    owl:disjointWith:
      - ActingSituation
      - FilmMakingSituation
      - NominationSituation
      - VoiceActingSituation
    rdfs:subClassOf:
      - Situation
  mao:Object:
    annotations:
      rdfs:comment:
        - Any physical, social, or mental object, or a substance. Following DOLCE Full, objects are always participating in some event (at least their own life), and are spatially located.^^xsd:string
      rdfs:label:
        - Object^^rdfs:Literal@en
    objectProperty:
      - coparticipatesWith
      - isParticipantIn
    owl:disjointWith:
      - Abstract
      - Event
      - Value
    rdfs:subClassOf:
      - Thing
  mao:Occupation:
    annotations:
      rdfs:label:
        - Occupation^^rdfs:Literal@en
    objectProperty:
      - isOccupationOf
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - Film
      - Place
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Organization:
    annotations:
      rdfs:label:
        - Organization^^rdfs:Literal@en
    owl:disjointWith:
      - Character
      - CharacterImportance
      - CollectiveAgent
      - Person
    rdfs:subClassOf:
      - Agent
  mao:OscarEligible:
    annotations:
      rdfs:label:
        - OscarEligible^^rdfs:Literal@en
    owl:equivalentClass:
      owl:Restriction:
        - FilmEligibleForAward and (eligibleFor value Oscars) and (violatesCriterion only not(OscarCriterion)) and (satisfiesCriterion only OscarCriterion)
    rdfs:subClassOf:
      - FilmEligibleForAward
  mao:Place:
    annotations:
      rdfs:label:
        - Place^^rdfs:Literal@en
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - Film
      - Occupation
      - Rating
      - Review
      - Situation
    rdfs:subClassOf:
      - Object
  mao:Person:
    annotations:
      rdfs:comment:
        - Persons in commonsense intuition, which does not apparently distinguish between either natural or social persons.^^xsd:string
      rdfs:label:
        - Person^^rdfs:Literal@en
    dataProperty:
      - hasName
    objectProperty:
      - actsIn
      - hasGender
      - hasOccupation
    owl:disjointWith:
      - Character
      - CharacterImportance
      - CollectiveAgent
      - Organization
    rdfs:subClassOf:
      - Agent
  mao:Protagonist:
    annotations:
      rdfs:label:
        - Protagonist^^rdfs:Literal@en
    owl:disjointWith:
      - Antagonist
      - Hero
    rdfs:subClassOf:
      - MainCharacter
  mao:ShortFilm:
    annotations:
      rdfs:label:
        - ShortFilm^^rdfs:Literal@en
    owl:disjointWith:
      - Animation
      - FeatureFilm
      - FilmEligibleForAward
    rdfs:equivalentClass:
      - Film and (hasFeatureLengthInMinutes some integer[<40])
    rdfs:subClassOf:
      - Film
  mao:SideCharacter:
    annotations:
      rdfs:label:
        - SideCharacter^^rdfs:Literal@en
    owl:disjointWith:
      - ExtraCharacter
      - MainCharacter
    rdfs:subClassOf:
      - CharacterImportance
  mao:Situation:
    annotations:
      rdfs:comment:
        - >
          A view, consistent with ('satisfying') a Description, on a set of entities. 
          It can also be seen as a 'relational context' created by an observer on the basis of a 'frame' (i.e. a Description). 
          For example, a PlanExecution is a context including some actions executed by agents according to certain parameters and expected tasks to be achieved from a Plan; a DiagnosedSituation is a context of observed entities that is interpreted on the basis of a Diagnosis, etc.
          Situation is also able to represent reified n-ary relations, where isSettingFor is the top-level relation for all binary projections of the n-ary relation. If used in a transformation pattern for n-ary relations, the designer should take care of creating only one subclass of Situation for each n-ary relation, otherwise the 'identification constraint' (Calvanese et al., IJCAI 2001) could be violated.^^xsd:string
      rdfs:label:
        - Situation^^rdfs:Literal@en
    objectProperty:
      - isSettingFor
    owl:disjointWith:
      - Agent
      - AggregateRating
      - Award
      - AwardCeremony
      - Film
      - Occupation
      - Place
      - Rating
      - Review
    rdfs:subClassOf:
      - Object
  mao:VoiceActingSituation:
    annotations:
      rdfs:label:
        - VoiceActingSituation^^rdfs:Literal@en
    objectProperty:
      - hasVoiceActor
      - hasCharacter
      - hasFilm
      - isPartOf
    owl:disjointWith:
      - ActingSituation
      - FilmMakingSituation
      - MovieWatchingSituation
      - NominationSituation
    rdfs:subClassOf:
      - Situation

owl:DataProperty:
  owl:topDataProperty: ""
  mao:dateReleased:
    annotations:
      rdfs:label:
        - date released^^rdfs:Literal@en
    rdf:type:
      - owl:FunctionalProperty
    rdfs:range:
      - xsd:date
  mao:hasAggregateRating:
    annotations:
      rdfs:label:
        - has aggregate rating^^rdfs:Literal@en
    rdfs:range:
      - xsd:decimal
  mao:hasCharacterTitle:
    annotations:
      rdfs:label:
        - has character title^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasFeatureLengthInMinutes:
    annotations:
      rdfs:label:
        - has feature length in minutes^^rdfs:Literal@en
    rdfs:range:
      - xsd:integer
  mao:hasInitialReleaseYear:
    annotations:
      rdfs:label:
        - has initial release year^^rdfs:Literal@en
    rdf:type:
      - owl:FunctionalProperty
    rdfs:range:
      - xsd:integer
  mao:hasName:
    annotations:
      rdfs:label:
        - has name^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasTitle:
    annotations:
      rdfs:label:
        - has title^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:hasWikipediaLink:
    annotations:
      rdfs:label:
        - has Wikipedia link^^rdfs:Literal@en
    rdfs:range:
      - xsd:string
  mao:win:
    annotations:
      rdfs:label:
        - win^^rdfs:Literal@en
    rdfs:range:
      - xsd:boolean

owl:ObjectProperty:
  owl:topObjectProperty: ""
  mao:actedBy:
    annotations:
      rdfs:label:
        - acted by^^rdfsL:Literal@en
    rdfs:range:
      - Person
  mao:actsIn:
    annotations:
      rdfs:label:
        - acts in^^rdfs:Literal@en
    rdfs:range:
      - FilmMakingSituation
  mao:coparticipatesWith:
    annotations:
      rdfs:comment:
        - A relation between two objects participating in a same Event; e.g., 'Vitas and Jimmy are playing tennis'.^^xsd:string
      rdfs:label:
        - co-participates with^^rdfs:Literal@en
    rdfs:domain:
      - Object
    rdfs:range:
      - Object
  mao:eligibleFor:
    annotations:
      rdfs:label:
        - eligible for^^rdfs:Literal@en
    rdfs:domain:
      - FilmEligibleForAward
    rdfs:range:
      - AwardCategory
  mao:forFilm:
    annotations:
      rdfs:label:
        - for film^^rdfs:Literal@en
    rdfs:domain:
      - NominationSituation
    rdfs:range:
      - Film
  mao:hasActor:
    annotations:
      rdfs:label:
        - has actor^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasArchetype:
    annotations:
      rdfs:label:
        - has archetype^^rdfs:Literal@en
  mao:hasAudience:
    annotations:
      rdfs:label:
        - has audience^^rdfs:Literal@en
    rdfs:range:
      - CollectiveAgent
  mao:hasAward:
    annotations:
      rdfs:label:
        - has award^^rdfs:Literal@en
    rdfs:range:
      - Award
  mao:hasAwardCategory:
    annotations:
      rdfs:label:
        - has award category^^rdfs:Literal@en
    rdfs:range:
      - AwardCategory
  mao:hasAwardCeremony:
    annotations:
      rdfs:label:
        - has award ceremony^^rdfs:Literal@en
    rdfs:range:
      - AwardCeremony
  mao:hasCast:
    annotations:
      rdfs:label:
        - has cast^^rdfs:Literal@en
    rdfs:range:
      - MovieCast
  mao:hasCharacter:
    annotations:
      rdfs:label:
        - has character^^rdfs:Literal@en
    rdfs:range:
      - Character
  mao:hasCinematographer:
    annotations:
      rdfs:label:
        - has cinematographer^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasComposer:
    annotations:
      rdfs:label:
        - has composer^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasContentRating:
    annotations:
      rdfs:label:
        - has content rating^^rdfs:Literal@en
    rdfs:range:
      - ContentRating
  mao:hasCountryOfOrigin:
    annotations:
      rdfs:label:
        - has country of origin^^rdfs:Literal@en
    rdfs:range:
      - Country
  mao:hasCrew:
    annotations:
      rdfs:label:
        - has crew^^rdfs:Literal@en
    rdfs:range:
      - FilmCrew
  mao:hasDirector:
    annotations:
      rdfs:label:
        - has director^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasFilm:
    annotations:
      rdfs:label:
        - has Film^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasFilmingLocation:
    annotations:
      rdfs:label:
        - has filming location^^rdfs:Literal@en
    rdfs:range:
      - Place
  mao:hasFilmStudio:
    annotations:
      rdfs:label:
        - has film studio^^rdfs:Literal@en
    rdfs:range:
      - MovieStudio
  mao:hasGender:
    annotations:
      rdfs:label:
        - has gender^^rdfs:Literal@en
    rdfs:range:
      - Gender
  mao:hasGenre:
    annotations:
      rdfs:label:
        - has genre^^rdfs:Literal@en
    rdfs:range:
      - Genre
  mao:hasImportance:
    annotations:
      rdfs:label:
        - has importance^^rdfs:Literal@en
    rdfs:range:
      - CharacterImportance
  mao:hasLanguage:
    annotations:
      rdfs:label:
        - has language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasMember:
    annotations:
      rdfs:label:
        - has member^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:hasOccupation:
    annotations:
      rdfs:label:
        - has occupation^^rdfs:Literal@en
    rdfs:range:
      - Occupation
  mao:hasOriginalLanguage:
    annotations:
      rdfs:label:
        - has original language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasPart:
    annotations:
      rdfs:comment:
        - >
          A schematic relation between any entities, e.g. 'the human body has a brain as part', '20th century contains year 1923', 'World War II includes the Pearl Harbour event'.
          Subproperties and restrictions can be used to specialize hasPart for objects, events, etc.^^xsd:string
      rdfs:label:
        - has part^^rdfs:Literal@en
    owl:inverseOf:
      - isPartOf
    rdf:type:
      - owl:TransitiveProperty
    rdfs:domain:
      - Thing
    rdfs:range:
      - Thing
  mao:hasPrequels:
    annotations:
      rdfs:label:
        - has prequels^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasProducer:
    annotations:
      rdfs:label:
        - has producer^^rdfs:Literal@en
  mao:hasRatingStatement:
    annotations:
      rdfs:label:
        - has rating statement^^rdfs:Literal@en
    rdfs:range:
      - AggregateRatingStatement
  mao:hasRole:
    annotations:
      rdfs:label:
        - has role^^rdfs:Literal@en
    rdfs:range:
      - MainCharacter
  mao:hasSequels:
    annotations:
      rdfs:label:
        - has sequels^^rdfs:Literal@en
    rdfs:range:
      - Film
  mao:hasSetting:
    annotations:
      rdfs:comment:
        - >
          A relation between entities and situations, e.g. 'this morning I've prepared my coffee with a new fantastic Arabica', i.e.: (an amount of) a new fantastic Arabica hasSetting the preparation of my coffee this morning.^^xsd:string
      rdfs:label:
        - has setting^^rdfs:Literal@en
    owl:inverseOf:
      - isSettingFor
    rdfs:domain:
      - Thing
    rdfs:range:
      - Situation
  mao:hasSubTitleInLanguage:
    annotations:
      rdfs:label:
        - has sub title in language^^rdfs:Literal@en
    rdfs:range:
      - Language
  mao:hasParticipant:
    annotations:
      rdfs:comment:
        - A relation between an object and a process, e.g. 'John took part in the discussion', 'a large mass of snow fell during the avalanche', or 'a cook, some sugar, flour, etc. are all present in the cooking of a cake'.^^xsd:string
      rdfs:label:
        - has participant^^rdfs:Literal@en
    owl:inverseOf:
      - isParticipantIn
    rdfs:domain:
      - Event
    rdfs:range:
      - Object
  mao:hasVoiceActor:
    annotations:
      rdfs:label:
        - has voice actor^^rdfs:Literal@en
    rdfs:range:
      - Person
  mao:involvesAgent:
    annotations:
      rdfs:label:
        - involves agent^^rdfs:Literal@en
    owl:inverseOf:
      - isAgentInvolvedIn
    rdfs:domain:
      - Event
    rdfs:range:
      - Agent
    rdfs:subPropertyOf:
      - hasParticipant
  mao:isAgentInvolvedIn:
    annotations:
      rdfs:label:
        - is agent involved in^^rdfs:Literal@en
    owl:inverseOf:
      - involvesAgent
    rdfs:domain:
      - Agent
    rdfs:range:
      - Event
    rdfs:subPropertyOf:
      - isParticipantIn
  mao:isGivenTo:
    annotations:
      rdfs:label:
        - is given to^^rdfs:Literal@en
    rdfs:domain:
      - NominationSituation
    rdfs:range:
      - Object
  mao:isOccupationOf:
    annotations:
      rdfs:label:
        - is occupation of^^rdfs:Literal@en
    owl:inverseOf:
      - hasOccupation
    rdfs:range:
      - Person
  mao:isPartOf:
    annotations:
      rdfs:comment:
        - A relation between any entities, e.g.'brain is a part of the human body'.^^xsd:string
      rdfs:label:
        - is part of^^rdfs:Literal@en
    owl:inverseOf:
      - hasPart
    rdf:type:
      - owl:TransitiveProperty
    rdfs:domain:
      - Thing
    rdfs:range:
      - Thing
  mao:isParticipantIn:
    annotations:
      rdfs:comment:
        - A relation between an object and a process, e.g. 'John took part in the discussion', 'a large mass of snow fell during the avalanche', or 'a cook, some sugar, flour, etc. are all present in the cooking of a cake'.^^xsd:string
      rdfs:label:
        - is participant in^^rdfs:Literal@en
    owl:inverseOf:
      - hasParticipant
    rdfs:domain:
      - Object
    rdfs:range:
      - Event
  mao:isSettingFor:
    annotations:
      rdfs:comment:
        - >
          A relation between situations and entities, e.g. 'this morning I've prepared my coffee with a new fantastic Arabica', i.e.: the preparation of my coffee this morning is the setting for (an amount of) a new fantastic Arabica.^^xsd:string
      rdfs:label:
        - is setting for^^rdfs:Literal@en
    rdfs:domain:
      - Situation
    rdfs:range:
      - Thing
